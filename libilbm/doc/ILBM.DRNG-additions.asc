I discovered by coincidence that some ILBM files written by Deluxe Paint V having
a DRNG chunk could not be opened by implementing the original DRNG specification.
The reason is that a DRNG chunk may sometimes store more data than the cumulative
sizes of the corresponding fields in the struct.

After doing some experiments with Deluxe Paint V and by inspecting the bytes in
the DRNG chunk written by it, I discovered that sometimes the 'flags' field has
yet another bit set, namely the 8th bit. If this bit is set, then more data is
stored in the DRNG chunk.

By opening the 'color range' function in Deluxe Paint V, I was able to derive the
purpose of the additional data. Apparently, the color range function also allows
someone to specify a fade value for each color cell.

Based on that discovery and some experiments, I concluded that if the 8th bit in
the flags field is set, then the DRNG chunk has the following structure:

typedef struct {
   UBYTE min;           /* min cell value */
   UBYTE max;           /* max cell value */
   SHORT rate;          /* color cycling rate, 16384 = 60 steps/second */
   SHORT flags;         /* 8=RNG_FADE */
   UBYTE ntrue;         /* number of DColor structs to follow */
   UBYTE nregs;         /* number of DIndex structs to follow */
   /* DColor and DIndex structs */
   UBYTE nfades;        /* number of DFade structs to follow */
   UBYTE pad;           /* padding byte */
   /* DFade structs */
   } DRange;

typedef struct { UBYTE cell; UBYTE fade; } DFade; /* fade value for a cell */

If the 8th bit is not set, then the original specification seems to work just
fine.

Sander van der Burg
